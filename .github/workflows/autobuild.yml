name: 'CI Build'

on:
  push:
    branches:
    - main
    paths:
    - 'Src/**'
    - '.github/workflows/autobuild.yml'

jobs:
  build:
    name: 'Build'
    runs-on: windows-latest
    timeout-minutes: 10
    permissions:
      contents: read
      issues: read
      checks: write
      pull-requests: write
    env:
      DOTNET_NOLOGO: true
      DOTNET_CLI_TELEMETRY_OPTOUT: true
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
          cache: true
          cache-dependency-path: 'Src/*/packages.lock.json'

    - name: Restore NuGet Packages
      run: dotnet restore --locked-mode

    - name: Build Binaries
      run: |
        dotnet build --configuration Release --no-restore
        dotnet build --configuration Debug --no-restore

    - name: Upload PowerShell Module as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: PowerShell
        path: Build/bin/DSInternals.Win32.RpcFilters.PowerShell/Release/*

    - name: Create NuGet Packages
      run: dotnet pack --configuration Release --no-build

    - name: Upload NuGet Packages as Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: NuGet
        path: Build/package/release/*nupkg

    - name: Run .NET Unit Tests
      run: dotnet test --configuration Debug --no-build -- --report-trx --results-directory "${{ github.workspace }}/Build/TestResults"

    - name: Run Pester Tests
      shell: powershell
      run: Src/DSInternals.Win32.RpcFilters.PowerShell/Test.ps1 -ModulePath "${{github.workspace}}/Build/bin/DSInternals.Win32.RpcFilters.PowerShell/Debug/DSInternals.RpcFilters"

    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action/windows@v2
      if: always()
      with:
        # Publish the MSTest and Pester results to the GitHub Checks API
        files: |
          Build\TestResults\**\*.trx
          Build\TestResults\*.xml

    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      with:
        name: TestResults
        path: |
            Build/TestResults/*.*
            !**/*.htm
